#!/usr/bin/env python3
"""
Description: Creates mipod specific secrets
Usage: ./createMipodSecrets --outfile global_provisioning/mipod.secrets
Use: Once per mipod application
"""

import os
import json
from argparse import ArgumentParser

def main(outfile):
    """writes user secrets to json file
    args:
        outfile (string): name of file to write mipod_secrets to """
    try:
        secrets = open(outfile, "w")
    except Exception as e:
        print("Unable to open secrets file: %s" % (e,))
        return 0

    mipodKey = os.urandom(64)

    try:
        mipod_secrets = {"mipod_key": ", ".join([  str(keyByte)  for keyByte in mipodKey])}
    except IndexError:
        raise Exception(
            "Unable to parse user name and pin. Please make sure you entered the user-list as "
            "space seperated pairs of usernames and pins. Example: --user-list user1:12345678 user2:12345689")
    print(mipod_secrets)
    info = json.dumps(mipod_secrets)
    # print(type(info))
    secrets.write(info)
    secrets.close()


def get_args():
    """gets arguments from command line"""
    parser = ArgumentParser(description='main interface to provision system')
    parser.add_argument('--outfile', help='location to save mipod secrets file', required=True)
    args = parser.parse_args()
    return args.outfile


if __name__ == '__main__':
    loc = get_args()
    print("generating user specific secrets")
    main(loc)
